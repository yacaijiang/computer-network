借助多文档之间相互关联形成的超文本（HyperText），连成可相互参阅的 WWW（World Wide Web，万维网）。
HTTP 协议的出现主要是为了解决文本传输的难题
通常使用的网络（包括互联网）是在 TCP/IP 协议族的基础上运作的。而 HTTP 属于它内部的一个子集。
TCP/IP 协议族按层次分别分为以下 4 层：
应用层、传输层、网络层和数据链路层。

应用层
应用层决定了向用户提供应用服务时通信的活动。TCP/IP 协议族内预存了各类通用的应用服务。
比如，FTP（File Transfer Protocol，文件传输协议）和 DNS（Domain Name System，域名系统）服务就是其中两类。
HTTP 协议也处于该层

传输层
传输层对上层应用层，提供处于网络连接中的两台计算机之间的数据传输。
在传输层有两个性质不同的协议：
TCP（Transmission Control Protocol，传输控制协议）
UDP（User Data Protocol，用户数据报协议）。

网络层（又名网络互连层）
网络层用来处理在网络上流动的数据包。数据包是网络传输的最小数据单位。
该层规定了通过怎样的路径（所谓的传输路线）到达对方计算机，并把数据包传送给对方。
与对方计算机之间通过多台计算机或网络设备进行传输时，
网络层所起的作用就是在众多的选项内选择一条传输路线。

链路层（又名数据链路层，网络接口层）
用来处理连接网络的硬件部分。包括
控制操作系统、硬件的设备驱动、
NIC（Network Interface Card，网络适配器，即网卡），及光纤等
物理可见部分（还包括连接器等一切传输媒介）。硬件上的范畴均在链路层的作用范围之内。

HTTP 举例来说明，首先作为发送端的客户端
在应用层（HTTP 协议）
发出一个想看某个 Web页面的 HTTP 请求。
接着，为了传输方便，
在传输层（TCP 协议）
把从应用层处收到的数据（HTTP 请求报文）进行分割，
并在各个报文上打上标记序号及端口号后转发给网
络层。
在网络层（IP 协议），增加作为通信目的地的 MAC
地址后转发给链路层。这样一来，发往网络的通信
请求就准备齐全了。
接收端的服务器在链路层接收到数据，按序往上层
发送，一直到应用层。当传输到应用层，才能算真
正接收到由客户端发送过来的 HTTP 请求。

发送端在层与层之间传输数据时，每经过一层时必
定会被打上一个该层所属的首部信息。反之，接收
端在层与层传输数据时，每经过一层时会把对应的
首部消去。
这种把数据信息包装起来的做法称为封装（encapsu
late）。

IP 协议的作用是把各种数据包传送给对方。而要保
证确实传送到对方那里，则需要满足各类条件。其
中两个重要的条件是 IP 地址和 MAC 地址（Media
Access Control Address）。
IP 地址指明了节点被分配到的地址，MAC 地址是指
网卡所属的固定地址。IP 地址可以和 MAC 地址进
行配对。IP 地址可变换，但 MAC 地址基本上不会
更改。

使用 ARP 协议凭借 MAC 地址进行通信
IP 间的通信依赖 MAC 地址。在网络上，通信的双
方在同一局域网（LAN）内的情况是很少的，通常是
经过多台计算机和网络设备中转才能连接到对方。
而在进行中转时，会利用下一站中转设备的 MAC 地
址来搜索下一个中转目标。这时，会采用 ARP 协议
（Address Resolution Protocol）。ARP 是一种用
以解析地址的协议，根据通信方的 IP 地址就可以
反查出对应的 MAC 地址。

没有人能够全面掌握互联网中的传输状况
在到达通信目标前的中转过程中，那些计算机和路
由器等网络设备只能获悉很粗略的传输路线。
这种机制称为路由选择（routing），

TCP 位于传输层，提供可靠的字节流服
务。
所谓的字节流服务（Byte Stream Service）是指，
为了方便传输，将大块数据分割成以报文段（segme
nt）为单位的数据包进行管理。而可靠的传输服务
是指，能够把数据准确可靠地传给对方。一言以蔽
之，TCP 协议为了更容易传送大数据才把数据分割
，而且 TCP 协议能够确认数据最终是否送达到对方
。

为了准确无误地将数据送达目标处，TCP 协议采用
了三次握手（three-way handshaking）策略。

DNS（Domain Name System）服务是和 HTTP 协议一
样位于应用层的协议。它提供域名到 IP 地址之间
的解析服务。

DNS 协议
提供通过域名查找 IP 地址，或逆向从 IP 地址
反查域名的服务。

 URL
（Uniform Resource Locator，统一资源定位符）
。URL 正是使用 Web 浏览器等访问 Web 页面时需
要输入的网页地址。

URI 是 Uniform Resource Identifier 的缩写。RF
C2396 分别对这 3 个单词进行了如下定义。
Uniform
规定统一的格式可方便处理多种不同类型的资源，
而不用根据上下文环境来识别资源指定的访问方式
。另外，加入新增的协议方案（如 http: 或 ftp:
）也更容易。
Resource
资源的定义是“可标识的任何东西”。除了文档文
件、图像或服务（例如当天的天气预报）等能够区
别于其他类型的，全都可作为资源。另外，资源不
仅可以是单一的，也可以是多数的集合体。
Identifier
表示可标识的对象。也称为标识符。
综上所述，URI 就是由某个协议方案表示的资源的
定位标识符。协议方案是指访问资源所使用的协议
类型名称。

采用 HTTP 协议时，协议方案就是 http。除此之外
，还有 ftp、mailto、telnet、file 等


HTML（HyperText Markup Language，超文本标记语
言）是为了发送 Web 上的超文本（Hypertext）而
开发的标记语言。超文本是一种文档系统，可将文
档中任意位置的信息与其他信息（文本或图片等）
建立关联，即超链接文本。标记语言是指通过在文
档的某部分穿插特别的字符串标签，用来修饰文档
的语言。我们把出现在 HTML 文档内的这种特殊字
符串叫做 HTML 标签（Tag）。

CSS（Cascading Style Sheets，层叠样式表）可以
指定如何展现 HTML 内的各种元素，属于样式表标
准之一。即使是相同的 HTML 文档，通过改变应用
的 CSS，用浏览器看到的页面外观也会随之改变。C
SS 的理念就是让文档的结构和设计分离，达到解耦
的目的。

XML（eXtensible Markup Language，可扩展标记语
言）是一种可按应用目标进行扩展的通用标记语言
。旨在通过使用 XML，使互联网数据共享变得更容
易。
XML 和 HTML 都是从标准通用标记语言 SGML（Stan
dard Generalized Markup Language）简化而成。
与 HTML 相比，它对数据的记录方式做了特殊处理
。

RSS（简易信息聚合，也叫聚合内容）和 Atom 都是
发布新闻或博客日志等更新信息文档的格式的总称
。两者都用到了 XML。


